name: CI Pipeline

on:
  workflow_dispatch: # Permite executar manualmente o pipeline

jobs:
  # Job 1: Construir o frontend
  build-react:
    runs-on: ubuntu-latest

    steps:
      # Etapa 1: Checkout do repositório
      - name: Checkout repository
        uses: actions/checkout@v3

      # Etapa 2: Configurar Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Etapa 3: Instalar dependências
      - name: Install dependencies
        run: |
          cd gourmet-inventory
          npm install

      # Etapa 4: Construir o frontend
      - name: Build React app
        run: |
          cd gourmet-inventory
          CI=false npm run build
      # Etapa extra: teste ls -la
      - name: ls -la
        run: ls -la

      # Etapa 5: Salvar o build, Dockerfile e default.conf como artefatos
      - name: Upload React build as artifact
        uses: actions/upload-artifact@v3
        with:
          name: react-build
          path: gourmet-inventory/build

      - name: Upload Dockerfile and default.conf as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: docker-configs
          path: |
            Dockerfile
            default.conf

  # Job 2: Construir e enviar a imagem Docker
  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: build-react # Este job depende do build-react

    steps:
      # Etapa 1: Baixar os artefatos do job anterior
      - name: Download React build artifact
        uses: actions/download-artifact@v3
        with:
          name: react-build

      - name: Download Dockerfile and default.conf artifacts
        uses: actions/download-artifact@v3
        with:
          name: docker-configs

      # Etapa extra: teste ls -la
      - name:  ls -la
        run: ls -la

      # Etapa 2: Fazer login no Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Etapa 3: Construir a imagem Docker
      - name: Build Docker image
        run: docker build -t voltty/frontend:latest .

      # Etapa 4: Enviar a imagem Docker para o Docker Hub
      - name: Push Docker image
        run: docker push voltty/frontend:latest
